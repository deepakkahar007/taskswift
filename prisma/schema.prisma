generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  priority    Priority @default(MEDIUM)
  status      Status   @default(PENDING)
  due_Date    DateTime
  created_At  DateTime @default(now())
  updated_At  DateTime @updatedAt

  user       User   @relation(fields: [created_By], references: [id], onDelete: Cascade)
  created_By String

  tasks User[] @relation("assigned_Tasks")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  role          Role      @default(USER)
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  created_Tasks Task[]

  assigned_Tasks Task[] @relation("assigned_Tasks")
}

enum Status {
  COMPLETED
  PENDING
  IN_PROGRESS
}

enum Priority {
  HIGH
  LOW
  MEDIUM
}

enum Role {
  ADMIN
  USER
  ROOT
}

// model TaskOnUsers {
//   task    Task @relation(fields: [task_Id], references: [id])
//   user    User   @relation(fields: [user_Id], references: [id])
//   task_Id Int
//   user_Id String

//   @@id([task_Id, user_Id])
// }

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
